{"version":3,"sources":["components/ui/mailbox/Mailbox.module.css","components/layout/Layout.module.css","components/layout/Header.module.css","assets/img/logo.svg","actions/authedUser.js","services/UtilsService.js","services/HttpHeadersService.js","components/layout/Login.js","components/layout/Logout.js","components/ui/mailbox/UnreadMailCount.js","components/layout/Header.js","actions/shared.js","components/layout/Layout.js","assets/img/icon-mail.png","components/ui/mailbox/LastUnreadMails.js","components/ui/mailbox/MailboxContainer.js","App.tsx","reportWebVitals.ts","reducers/index.js","reducers/authedUser.js","middleware/index.js","index.tsx"],"names":["module","exports","SET_AUTHED_USER","LOGOUT","setAuthedUser","authedUser","type","UtilsService","saveToLocalStorage","key","value","Promise","resolve","reject","obj","chrome","storage","sync","set","getFromLocalStorage","get","data","getGatewayApiUrl","process","HttpHeadersService","getAuthHeaders","all","getUserToken","getDeviceId","then","values","length","Authorization","getNonAuthHeaders","deviceId","user","Object","keys","userObj","JSON","parse","access_token","uuid","generateUUID","generatedUuid","s","hexDigits","i","substr","Math","floor","random","join","connect","useState","setIsLoading","username","setUsername","password","setPassword","dispatch","useDispatch","onSubmit","event","preventDefault","loginInfo","email","details","headers","axios","post","response","stringify","catch","error","console","log","message","className","InputGroup","size","FormControl","placeholder","aria-label","aria-describedby","onChange","e","target","Text","id","Button","variant","Logout","onClick","delete","UnreadMailCount","isLoading","unreadEmailCount","setUnreadEmailCount","useEffect","inbox","filter","f","unread","Spinner","as","animation","role","aria-hidden","Badge","bg","isLoggedIn","props","Navbar","Container","Brand","href","alt","src","logo","width","handleInitialData","showLoading","hideLoading","Layout","classes","main","children","accountMail","client_id","lastUnreadMails","setLastUnreadMails","vh70","map","mail","emailId","emailUrl","tabs","create","url","tab","handleRouteToMail","Card","border","Header","from","full_name","first_name","moment","unix","time","format","Body","subject","first_line","iconMail","class","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","state","action","loadingBar","loadingBarReducer","applyMiddleware","thunk","store","createStore","reducer","middleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ca11af8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"vh70\":\"Mailbox_vh70__3XhAL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2otSh\",\"logo\":\"Header_logo__2yYRj\",\"active\":\"Header_active__WHMYj\",\"badge\":\"Header_badge__1yJvq\"};","export default __webpack_public_path__ + \"static/media/logo.d732ee88.svg\";","export const SET_AUTHED_USER = 'SET_AUTHED_USER';\nexport const LOGOUT = 'LOGOUT';\n\nexport function setAuthedUser(authedUser) {\n  return {\n    type: SET_AUTHED_USER,\n    authedUser: authedUser\n  };\n}\n\nexport function logout() {\n  return {\n    type: LOGOUT\n  };\n}\n","/*global chrome*/\n\nclass UtilsService {\n  /*\n  static saveToLocalStorage(key, value) {\n    localStorage.setItem(key, value);\n  }\n\n  static getFromLocalStorage(key) {\n    return localStorage.getItem(key);\n  }\n\n  static removeFromLocalStorage(key) {\n    localStorage.removeItem(key);\n  }\n  */\n\n  static saveToLocalStorage = (key, value) => {\n    return new Promise((resolve, reject) => {\n      var obj = {};\n      obj[key] = value;\n      chrome.storage.sync.set(obj, () => {\n        resolve(value);\n      });\n    });\n  };\n\n  static getFromLocalStorage = (key) => {\n    return new Promise((resolve, reject) => {\n      chrome.storage.sync.get(key, (data) => {\n        if (data) {\n          resolve(data);\n        } else {\n          reject();\n        }\n      });\n    });\n  };\n\n  static getGatewayApiUrl = () => {\n    return process.env.REACT_APP_GATEWAY_API_URL;\n  };\n}\n\nexport default UtilsService;\n","import UtilsService from './UtilsService';\n\nclass HttpHeadersService {\n  static getAuthHeaders = () => {\n    return Promise.all([this.getUserToken(), this.getDeviceId()]).then(\n      (values) => {\n        if (values.length == 2) {\n          // TODO: NilS\n          let headers = {\n            Authorization: 'Bearer ' + values[0],\n            'App-Version': '1.0',\n            'Device-Language': 'en-US',\n            'Device-Name': 'WEB',\n            'Device-ID': values[1]\n          };\n          return headers;\n        }\n      }\n    );\n  };\n\n  static getNonAuthHeaders = () => {\n    return new Promise((resolve, reject) => {\n      this.getDeviceId().then((deviceId) => {\n        let headers = {\n          'App-Version': '1.0',\n          'Device-Language': 'en-US',\n          'Device-Name': 'WEB',\n          'Device-ID': deviceId\n        };\n        resolve(headers);\n      });\n    });\n  };\n\n  static getUserToken = () => {\n    /*\n    if (UtilsService.getFromLocalStorage('ym@user')) {\n      let user = JSON.parse(UtilsService.getFromLocalStorage('ym@user'));\n      return user.access_token;\n    }\n    */\n    return new Promise((resolve, reject) => {\n      UtilsService.getFromLocalStorage('ym@user').then((user) => {\n        if (Object.keys(user).length !== 0) {\n          const userObj = JSON.parse(user['ym@user']);\n          resolve(userObj.access_token);\n        } else {\n          reject();\n        }\n      });\n    });\n  };\n\n  static getDeviceId = () => {\n    /* let localUuid = UtilsService.getFromLocalStorage('y@uuid');\n    if (localUuid) {\n      return localUuid;\n    } */\n\n    return new Promise((resolve, reject) => {\n      UtilsService.getFromLocalStorage('y@uuid').then((uuid) => {\n        if (Object.keys(uuid).length !== 0) {\n          resolve(uuid['y@uuid']);\n        } else {\n          let uuid = this.generateUUID();\n          // UtilsService.saveToLocalStorage('y@uuid', uuid);\n          UtilsService.saveToLocalStorage('y@uuid', uuid).then(\n            (generatedUuid) => {\n              resolve(generatedUuid);\n            }\n          );\n        }\n      });\n    });\n\n    //return this.generateUUID();\n  };\n\n  static generateUUID = () => {\n    const s = [];\n    const hexDigits = '0123456789abcdef';\n    for (let i = 0; i < 36; i++) {\n      s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\n    }\n    s[14] = '4'; // bits 12-15 of the time_hi_and_version field to 0010\n    // tslint:disable-next-line:no-bitwise\n    s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1); // bits 6-7 of the clock_seq_hi_and_reserved to 01\n    s[8] = s[13] = s[18] = s[23] = '-';\n\n    return s.join('');\n  };\n}\n\nexport default HttpHeadersService;\n","import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\nimport { connect, useDispatch } from 'react-redux';\nimport { setAuthedUser } from '../../actions/authedUser';\nimport HttpHeadersService from '../../services/HttpHeadersService';\nimport UtilsService from '../../services/UtilsService';\n\nfunction Login() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    //  + '@yaani.com'\n    let loginInfo = {\n      email: username,\n      password: password,\n      details: 1\n    };\n    setIsLoading(true);\n    HttpHeadersService.getNonAuthHeaders().then((headers) => {\n      axios\n        .post(UtilsService.getGatewayApiUrl() + '/accounts/login', loginInfo, {\n          headers: headers\n        })\n        .then((response) => {\n          // TODO: NilS\n          setIsLoading(false);\n          /* UtilsService.saveToLocalStorage(\n            'ym@user',\n            JSON.stringify(response.data)\n          ); */\n          UtilsService.saveToLocalStorage(\n            'ym@user',\n            JSON.stringify(response.data)\n          ).then((data) => {\n            dispatch(setAuthedUser(data));\n          });\n        })\n        .catch((error) => {\n          console.log(error);\n          // TODO: NilS error objesi?\n          console.log(error.error.message);\n        });\n    });\n  };\n\n  // <InputGroup.Text id=\"basic-addon2\">@yaani.com</InputGroup.Text>\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"d-flex flex-column py-2\">\n        <InputGroup size=\"sm\" className=\"mb-3\">\n          <FormControl\n            placeholder=\"E-mail\"\n            aria-label=\"E-mail\"\n            aria-describedby=\"basic-addon2\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </InputGroup>\n        <InputGroup size=\"sm\" className=\"mb-3\">\n          <InputGroup.Text id=\"inputGroup-sizing-sm\">Password</InputGroup.Text>\n          <FormControl\n            placeholder=\"Password\"\n            aria-label=\"Password\"\n            aria-describedby=\"inputGroup-sizing-sm\"\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </InputGroup>\n        <div>\n          <Button variant=\"primary\" className=\"float-end\" type=\"submit\">\n            Login\n          </Button>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default connect()(Login);\n","import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\nimport { connect, useDispatch } from 'react-redux';\nimport { setAuthedUser } from '../../actions/authedUser';\nimport { logout } from '../../actions/authedUser';\nimport HttpHeadersService from '../../services/HttpHeadersService';\nimport UtilsService from '../../services/UtilsService';\n\nfunction Logout() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleLogout = (event) => {\n    setIsLoading(true);\n    HttpHeadersService.getAuthHeaders().then((headers) => {\n      axios\n        .delete(UtilsService.getGatewayApiUrl() + '/accounts/logout', {\n          headers: headers\n        })\n        .then(() => {\n          // TODO: NilS\n          // UtilsService.removeFromLocalStorage('ym@user');\n          UtilsService.saveToLocalStorage('ym@user', null).then(() => {\n            setIsLoading(false);\n            dispatch(logout());\n          });\n        })\n        .catch((error) => {\n          console.log(error);\n          // TODO: NilS error objesi?\n          console.log(error.error.message);\n        });\n    });\n  };\n\n  return (\n    <Button variant=\"danger\" onClick={handleLogout}>\n      Logout\n    </Button>\n  );\n}\n\nexport default Logout;\n","import { Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport HttpHeadersService from '../../../services/HttpHeadersService';\nimport UtilsService from '../../../services/UtilsService';\nimport { Button, Badge, Spinner } from 'react-bootstrap';\n\nfunction UnreadMailCount() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [unreadEmailCount, setUnreadEmailCount] = useState(0);\n\n  useEffect(() => {\n    setIsLoading(true);\n    HttpHeadersService.getAuthHeaders().then((headers) => {\n      axios\n        .get(UtilsService.getGatewayApiUrl() + '/emails/folders/all', {\n          headers: headers\n        })\n        .then((response) => {\n          // TODO: NilS\n          setIsLoading(false);\n          let inbox = response.data.filter((f) => f.id == 2);\n          if (inbox && inbox.length > 0) {\n            setUnreadEmailCount(inbox[0].unread);\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n          // TODO: NilS error objesi?\n          console.log(error.error.message);\n        });\n    });\n  }, []);\n\n  return (\n    <Button variant=\"primary\">\n      Unread{' '}\n      {isLoading ? (\n        <Spinner\n          as=\"span\"\n          animation=\"grow\"\n          size=\"sm\"\n          role=\"status\"\n          aria-hidden=\"true\"\n        />\n      ) : (\n        <Badge bg=\"secondary\">\n          {unreadEmailCount > 999 ? '+999' : unreadEmailCount}\n        </Badge>\n      )}\n      <span className=\"visually-hidden\">Unread E-Mail Count</span>\n    </Button>\n  );\n}\n\nexport default UnreadMailCount;\n","import { Link } from 'react-router-dom';\nimport classes from './Header.module.css';\nimport { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Navbar, Container } from 'react-bootstrap';\nimport logo from '../../assets/img/logo.svg';\nimport Login from './Login';\nimport Logout from './Logout';\nimport UnreadMailCount from './../ui/mailbox/UnreadMailCount';\n\nfunction Header(props) {\n  return (\n    <Navbar bg=\"light\">\n      <Container>\n        <Navbar.Brand href=\"#home\">\n          <img\n            alt=\"YaaniMail\"\n            src={logo}\n            width=\"150\"\n            className=\"d-inline-block align-top pt-1\"\n          />\n        </Navbar.Brand>\n        {props.isLoggedIn === false ? (\n          <Login />\n        ) : (\n          <Fragment>\n            <UnreadMailCount />\n            <Logout />\n          </Fragment>\n        )}\n      </Container>\n    </Navbar>\n  );\n}\n\nfunction mapStateToProps({ authedUser }) {\n  return {\n    isLoggedIn: !!authedUser,\n    authedUser: authedUser\n  };\n}\n\nexport default connect(mapStateToProps)(Header);\n","import { showLoading, hideLoading } from 'react-redux-loading';\nimport { setAuthedUser } from '../actions/authedUser';\nimport UtilsService from '../services/UtilsService';\n\nexport function handleInitialData() {\n  return (dispatch) => {\n    dispatch(showLoading());\n    return getInitialData().then(({ authedUser }) => {\n      if (authedUser) {\n        dispatch(setAuthedUser(authedUser));\n      }\n      dispatch(hideLoading());\n    });\n  };\n}\n\nexport function getInitialData() {\n  // const user = UtilsService.getFromLocalStorage('ym@user');\n  return new Promise((resolve, reject) => {\n    UtilsService.getFromLocalStorage('ym@user').then((user) => {\n      if (Object.keys(user).length !== 0) {\n        resolve({ authedUser: JSON.parse(user['ym@user']) });\n      } else {\n        resolve({});\n      }\n    });\n  });\n}\n","import Header from './Header';\nimport classes from './Layout.module.css';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { handleInitialData } from '../../actions/shared';\n\n// className={classes.main}\n\nfunction Layout(props) {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(handleInitialData());\n  }, []);\n\n  return (\n    <div>\n      <Header />\n      <main className={classes.main}>{props.children}</main>\n    </div>\n  );\n}\n\nexport default Layout;\n","export default __webpack_public_path__ + \"static/media/icon-mail.edfb9dec.png\";","import { Link } from 'react-router-dom';\nimport { Fragment, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport HttpHeadersService from '../../../services/HttpHeadersService';\nimport UtilsService from '../../../services/UtilsService';\nimport { Card, Spinner } from 'react-bootstrap';\nimport moment from 'moment/moment.js';\nimport classes from './Mailbox.module.css';\nimport iconMail from '../../../assets/img/icon-mail.png';\n\n/*global chrome*/\n\nfunction LastUnreadMails(props) {\n  const [isLoading, setIsLoading] = useState(true);\n  const [lastUnreadMails, setLastUnreadMails] = useState([]);\n\n  // url: chrome.runtime.getURL('https://www.google.com/')\n  function handleRouteToMail(emailId) {\n    let emailUrl = `https://kurumsal.yaanimail.com/m/${props.accountMail}/PRIMARY/inbox/single/${emailId}/details`;\n    chrome.tabs.create(\n      {\n        url: emailUrl\n      },\n      function (tab) {\n        // Tab opened.\n        /*\n        chrome.tabs.executeScript(\n          tab.id,\n          {\n            code: 'localStorage.setItem(\"hellolar\", \"myVal\");'\n          },\n          function () {\n            // chrome.tabs.remove(tab.id);\n          }\n        );\n        */\n      }\n    );\n    /*\n    chrome.runtime.sendMessage(\n      { method: 'getLocalStorage', key: 'status' },\n      function (response) {\n        console.log(response.data);\n      }\n    );\n    */\n  }\n\n  useEffect(() => {\n    setIsLoading(true);\n    HttpHeadersService.getAuthHeaders().then((headers) => {\n      axios\n        .get(\n          UtilsService.getGatewayApiUrl() +\n            '/emails/messages?folder=inbox&limit=5&message_listing_type=message&offset=0&order=date&order_type=desc&flag=false&unread=true&attachment=false&search=*',\n          {\n            headers: headers\n          }\n        )\n        .then((response) => {\n          // TODO: NilS\n          setIsLoading(false);\n          setLastUnreadMails(response.data);\n        });\n    });\n  }, []);\n\n  return (\n    <Fragment>\n      {isLoading ? (\n        <div className=\"container h-100\">\n          <div\n            className={`d-flex justify-content-center align-items-center ${classes.vh70}`}\n          >\n            <Spinner animation=\"border\" variant=\"info\" />\n          </div>\n        </div>\n      ) : (\n        lastUnreadMails &&\n        lastUnreadMails.map((mail) => (\n          <div onClick={() => handleRouteToMail(mail.id)}>\n            <Card border=\"info\">\n              <Card.Header>\n                {mail.from.map((f) =>\n                  f.full_name && f.full_name.length > 0\n                    ? f.full_name\n                    : f.first_name\n                )}{' '}\n                - {moment.unix(mail.time).format('MMMM Do YYYY, h:mm:ss a')}\n              </Card.Header>\n              <Card.Body>\n                <Card.Text className=\"fw-bold\">{mail.subject}</Card.Text>\n                <Card.Text>{mail.first_line}</Card.Text>\n              </Card.Body>\n            </Card>\n          </div>\n        ))\n      )}\n      {!isLoading && (!lastUnreadMails || lastUnreadMails.length === 0) && (\n        <div className=\"container h-100\">\n          <div\n            className={`d-flex justify-content-center align-items-center ${classes.vh70}`}\n          >\n            <img src={iconMail} alt=\"Login\" className=\"not-found-image\" />\n          </div>\n          <p class=\"text-center text-primary fw-bold fs-6\">\n            No unread e-mails...\n          </p>\n        </div>\n      )}\n    </Fragment>\n  );\n}\n\nfunction mapStateToProps({ authedUser }) {\n  return {\n    accountMail: authedUser ? authedUser.client_id : ''\n  };\n}\n\nexport default connect(mapStateToProps)(LastUnreadMails);\n","import { connect } from 'react-redux';\nimport LastUnreadMails from './LastUnreadMails';\nimport classes from './Mailbox.module.css';\nimport iconMail from '../../../assets/img/icon-mail.png';\n\nfunction MailboxContainer(props) {\n  return props.isLoggedIn ? (\n    <LastUnreadMails />\n  ) : (\n    <div className=\"container h-100\">\n      <div\n        className={`d-flex justify-content-center align-items-center ${classes.vh70}`}\n      >\n        <img src={iconMail} alt=\"Login\" className=\"not-found-image\" />\n      </div>\n    </div>\n  );\n}\n\nfunction mapStateToProps({ authedUser }) {\n  return {\n    isLoggedIn: !!authedUser\n  };\n}\n\nexport default connect(mapStateToProps)(MailboxContainer);\n","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Layout from './components/layout/Layout';\nimport MailboxContainer from './components/ui/mailbox/MailboxContainer';\n\nfunction App() {\n  return (\n    <Layout>\n      <MailboxContainer />\n    </Layout>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\nimport authedUser from './authedUser';\nimport { loadingBarReducer } from 'react-redux-loading';\n\nexport default combineReducers({\n  authedUser,\n  loadingBar: loadingBarReducer\n});\n","import { SET_AUTHED_USER, LOGOUT } from '../actions/authedUser';\n\nexport default function authedUser(state = null, action) {\n  switch (action.type) {\n    case SET_AUTHED_USER:\n      return action.authedUser;\n    case LOGOUT:\n      return null;\n    default:\n      return state;\n  }\n}\n","import thunk from 'redux-thunk';\nimport { applyMiddleware } from 'redux';\n\nexport default applyMiddleware(thunk);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducer from './reducers';\nimport middleware from './middleware';\n\nconst store = createStore(reducer, middleware);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}